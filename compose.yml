---
# @TODO: Needs fully compatible and transparent podman-compose support
x-podman:
  in_pod: false

x-templates:
  service: &service
    healthcheck: &service-healthcheck
      interval: 10s
      start_interval: 2s
      start_period: 10s
      timeout: 3s
    mem_swappiness: 0
    networks:
      - identity_provider
      - proxy_bridge
    restart: unless-stopped
    security_opt:
      - label:disable
    userns_mode: keep-id:uid=0,gid=0

  job: &job
    <<: *service
    restart: "no"

configs:
  postgresql:
    content: |
      listen_addresses = '*'
      max_connections = 10
      shared_buffers = 16MB
      effective_cache_size = 64MB
      work_mem = 1MB
      maintenance_work_mem = 2MB

name: identity-provider

networks:
  identity_provider:
  proxy_bridge:
    external: true

services:
  # @TODO: Uncomment once we figure out a way to run it on 128MB of RAM
  # cockroachdb:
  #   <<: *service
  #   command: >
  #     start-single-node
  #     --http-addr=0.0.0.0:8080
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #   environment:
  #     COCKROACH_DATABASE: zitadel
  #     COCKROACH_PASSWORD: ${DATABASE_USER_PASSWORD:?}
  #     COCKROACH_USER: zitadel
  #   healthcheck:
  #     <<: *service-healthcheck
  #     test:
  #       - CMD
  #       - curl
  #       - -f
  #       - http://localhost:8080/health?ready=1
  #   image: cockroachdb/cockroach:v25.1.1
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.middlewares.strip-db-prefix.stripprefix.prefixes=/db
  #     - traefik.http.routers.cockroachdb.middlewares=admin-ip-only@file,strip-db-prefix
  #     - traefik.http.routers.cockroachdb.rule=Host("${HOSTNAME:?}") && PathPrefix("/db")
  #     - traefik.http.services.cockroachdb.loadbalancer.server.scheme=https
  #     - traefik.http.services.cockroachdb.loadBalancer.serversTransport=self-signed@file
  #   volumes:
  #     - ./cockroachdb/certificates:/cockroach/certs
  #     - ./cockroachdb/data:/cockroach/cockroach-data

  postgresql:
    <<: *service
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    configs:
      - gid: "70"
        mode: 0440
        source: postgresql
        target: /etc/postgresql/postgresql.conf
        uid: "70"
    deploy:
      resources:
        limits:
          memory: 128M
    environment:
      POSTGRES_DB: zitadel
      POSTGRES_PASSWORD: ${DATABASE_USER_PASSWORD:?}
      POSTGRES_USER: zitadel
    healthcheck:
      <<: *service-healthcheck
      test:
        - CMD
        - pg_isready
        - -d
        - zitadel
    image: postgres:17.4-alpine3.21
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  # zitadel:
  #   <<: *service
  #   # deploy:
  #   #   resources:
  #   #     limits:
  #   #       memory: 128M
  #   # healthcheck:
  #   #   <<: *service-healthcheck
  #   #   test:
  #   #     - CMD
  #   #     - wget
  #   #     - --spider
  #   #     - -q
  #   #     - http://127.0.0.1:3000/admin/healthz
  #   image: ghcr.io/zitadel/zitadel:v2.71.3
  #   # labels:
  #   #   - traefik.enable=true
  #   #   - traefik.http.routers.zitadel.rule=Host("${HOSTNAME:?}")
...
