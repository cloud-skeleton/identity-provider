---
# @TODO: Needs fully compatible and transparent podman-compose support
x-podman:
  in_pod: false

x-templates:
  service: &service
    healthcheck: &service-healthcheck
      interval: 10s
      start_interval: 2s
      start_period: 10s
      timeout: 3s
    mem_swappiness: 0
    networks:
      - identity_provider
      - proxy_bridge
    restart: unless-stopped
    security_opt:
      - label:disable
    userns_mode: keep-id:uid=0,gid=0

  job: &job
    <<: *service
    restart: "no"

name: identity-provider

networks:
  identity_provider:
  proxy_bridge:
    external: true

services:
  cockroachdb:
    <<: *service
    command: start-single-node --http-addr=cockroachdb:8080
    # deploy:
    #   resources:
    #     limits:
    #       memory: 128M
    # environment:
    #   COCKROACH_DATABASE:
    #   COCKROACH_PASSWORD:
    #   COCKROACH_USER:
    # healthcheck:
    #   <<: *service-healthcheck
    #   test:
    #     - CMD
    #     - wget
    #     - --spider
    #     - -q
    #     - http://127.0.0.1:3000/admin/healthz
    image: cockroachdb/cockroach:v25.1.1
    volumes:
      - ./cockroachdb/certificates:/cockroach/certs
      - ./cockroachdb/data:/cockroach/cockroach-data

  # zitadel:
  #   <<: *service
  #   # deploy:
  #   #   resources:
  #   #     limits:
  #   #       memory: 128M
  #   # healthcheck:
  #   #   <<: *service-healthcheck
  #   #   test:
  #   #     - CMD
  #   #     - wget
  #   #     - --spider
  #   #     - -q
  #   #     - http://127.0.0.1:3000/admin/healthz
  #   image: ghcr.io/zitadel/zitadel:v2.71.3
  #   # labels:
  #   #   - traefik.enable=true
  #   #   - traefik.http.routers.zitadel.rule=Host("${HOSTNAME:?}")
...
